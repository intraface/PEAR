<!DOCTYPE book
  PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<book>

  <bookinfo>
	<date>2007-04-28</date>
    <title>LiveUser</title>
    <subtitle></subtitle>
    <authorgroup>
      <author>
        <firstname>Lars</firstname>
        <surname>Olesen</surname>
      </author>
    </authorgroup>
    <copyright>
      <year>2007</year>
      <holder>The authors</holder>
    </copyright>
    <legalnotice></legalnotice>
    <abstract>
      <para>
        Describes how to use PEAR's LiveUser library
      </para>
    </abstract>

  </bookinfo>
  <toc></toc>

  <!--
  <preface id="preface">
    <title>Preface</title>
    <para>
      This tutorial describes how to use PHPMailer and explains the use of the class functions.
    </para>
  </preface>
  -->

  <chapter id="introduction">
    <title>Introduction</title>
    <para>
     LiveUser is an advanced authentication and permission framework that comes with a large array of out of the box features which can be used optionally. The base class is called LiveUser and is often refered to as the "client" and is what will be commonly be used to authenticate a specific user and then optionally make permission checks on this user.
    </para>
    <para>
      LiveUser provides the following key features: The LiveUser class takes care of the login process and can be configured to use a certain permission container and one or more different auth containers. That means, you can have your users' data scattered amongst many data containers and have the LiveUser class try each defined container until the user is found. For example, you can have all website users who can apply for a new account online on the webserver's local database. Also, you want to enable all your company's employees to login to the site without the need to create new accounts for all of them. To achieve that, a second container can be defined to be used by the LiveUser class.
    </para>
    <para>
      You can also define a permission container of your choice that will manage the rights for each user. Depending on the container, you can implement any kind of permission schemes for your application while having one consistent API.
    </para>
    <para>
      Using different permission and auth containers, it's easily possible to integrate newly written applications with older ones that have their own ways of storing permissions and user data. Just make a new container type and you're ready to go!
    </para>
    <para>
      Currently available are containers using: PEAR::DB, PEAR::MDB, PEAR::MDB2, ext/PDO, PEAR::XML_Tree, Session and PEAR::Auth.
    </para>
  </chapter>

  <chapter id="setting-up">

    <title>Setting up LiveUser</title>

    <section id="setting-up-the-database">
      <title>Setting up the database</title>
      <para>
        You have to setup some standard tables to be able to use LiveUser.
      </para>
      <para>
        The package has a <classname>LiveUser_Misc_Schema_Install</classname> which can be used to create the database setup correctly.
      </para>
      <para>
        Make sure that you feed the installer with the correct configuration. Below is the minimum requirements.
      </para>
      <para>
        <programlisting><![CDATA[
<?php
/* config.liveuser.php */

$configuration = array(
			'debug' => true,
    		'authContainers' => array(
        		array(
            		'passwordEncryptionMode'=> 'MD5',
            		'type'         => 'MDB2',
		            'expireTime'   => 3600,
    		        'idleTime'     => 1800,
        		    'storage' => array(
	        	        'dsn' => $dsn,
						'force_seq' => false,
						'alias' => array(
		                    'auth_user_id' => 'auth_user_id',
    		                'lastlogin' => 'lastlogin',
							'is_active' => 'is_active',
            	    	    'owner_user_id' => 'owner_user_id',
                	    	'owner_group_id' => 'owner_group_id',
		                ),
    		            'fields' => array(
							'auth_user_id' => 'integer',
							'lastlogin' => 'timestamp',
							'is_active' => 'boolean',
							'owner_user_id' => 'integer',
							'owner_group_id' => 'integer',
						),
						'tables' => array(
							'users' => array(
							'fields' => array(
                	            'lastlogin' => null,
                    	        'is_active' => null,
                        	    'owner_user_id' => null,
	                            'owner_group_id' => null,
								),
							),
						),
					),
				),
			),
			'permContainer'  => array(
				'type'  => 'Complex',
					'storage' => array(
						'MDB2' => array(
							'dsn' => $dsn,
							'prefix' => 'liveuser_',
							'force_seq' => false,
						'fields' => array(
							'auth_user_id' => 'integer',
						),
					)
				)
			)
		);
?>
        ]]></programlisting>
      </para>
    </section>

    <section id="setting-up-the-configuration">
      <title>Setting up the configuration</title>
      <para>
        LiveUser is very versatile as it makes you either use some standard database tables, or you can use your existing tables for your users. All that is configured in an array.
      </para>
      <para>
        Using the standard tables this is the minimum requirement for the configuration array. As you can see there is quite a lot of stuff here.
      </para>
      <para>
        <programlisting><![CDATA[
<?php
/* auth.php */

$configuration = array(
			'debug' => true,
    		'authContainers' => array(
        		array(
            		'passwordEncryptionMode'=> 'MD5',
            		'type'         => 'MDB2',
		            'expireTime'   => 3600,
    		        'idleTime'     => 1800,
        		    'storage' => array(
	        	        'dsn' => $dsn,
						'force_seq' => false,
						'alias' => array(
		                    'auth_user_id' => 'auth_user_id',
    		                'lastlogin' => 'lastlogin',
							'is_active' => 'is_active',
            	    	    'owner_user_id' => 'owner_user_id',
                	    	'owner_group_id' => 'owner_group_id',
		                ),
    		            'fields' => array(
							'auth_user_id' => 'integer',
							'lastlogin' => 'timestamp',
							'is_active' => 'boolean',
							'owner_user_id' => 'integer',
							'owner_group_id' => 'integer',
						),
						'tables' => array(
							'users' => array(
							'fields' => array(
                	            'lastlogin' => null,
                    	        'is_active' => null,
                        	    'owner_user_id' => null,
	                            'owner_group_id' => null,
								),
							),
						),
					),
				),
			),
			'permContainer'  => array(
				'type'  => 'Complex',
					'storage' => array(
						'MDB2' => array(
							'dsn' => $dsn,
							'prefix' => 'liveuser_',
							'force_seq' => false,
						'fields' => array(
							'auth_user_id' => 'integer',
						),
					)
				)
			)
		);
?>
        ]]></programlisting>
      </para>

    </section>
  </chapter>

  <chapter id="other-references">
    <title>Other references</title>
    <para>
      API: http://pear.php.net/package/LiveUser/docs/latest/li_LiveUser.html
    </para>
    <para>
      Tutorial: http://www.gvngroup.be/doc/LiveUser/index.php
    </para>
  </chapter>

</book>